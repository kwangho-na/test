CanvasBase {
	CanvasBase() {
		this.addClass('common/control.PageBase'); 	
		page=null, canvas=null;
	}
	loadMainPage(pageXml) {
		cf.inject(imagePath, projectId, pageCode, imagePath);
		root= this.parseXml( fmt(pageXml) );
		if( root[Template] ) {
			tmp=root[Template].ref();
			while( tmp.valid() ) {
				var=tmp.findPos(';').trim();
				xml=fmt( conf(var) );
				this.parseXml(xml.ref(), root);
			}
		}
		this.mainNode=root;
		this.pageStart();
		this.update();
	}

	/*   페이지 시작   */
	pageStart() {
		node=this[mainNode];
		not( node ) {
			return;
		}
		cf.pageStart		=true;
		cf.pageStartTick 	=System.tick();
		cf[classErrorCheck].initNode();
		
		node[rect]=null;
		size=page.size();
		not( node[Width] ) {
			node[Width] = size.width();
		}
		not( node[Height] ) {
			node[Height] = size.height();
		}
		setNodeSize(node, true);
		this.conf();
		canvas.size(node[rect]);
	}


	/*   페이지 비율 설정   */
	setPageRate(rate) {
		not( rate) return;
		not( typeof(rate,'number') ) {
			rate=rate.toNumber();
		}
		if( rate ) cf.pageRate=rate;
		this.conf();
		this.update();
	}

	conf() {
		node=this[mainNode];
		this.confLayout(node);
	}

	draw(draw,  timeline) {
		not( cf.pageStart ) return;
		node=this[mainNode];
		if( cf[pageMode].eq('full') ) {
			rc=page.rect();
			not( rc.eq(cf[pageRect]) ) {
				cf[pageRect]=rc;
				node[Width] = rc.width();
				node[Height] = rc.height();
				setNodeSize(node, true, true);
				canvas.size(rc);
				this.conf();
			}
		}
		if( node[bg] ) {
				draw.drawImage(node[rect], imageLoad(node, "bg"), 'fill');
		}
		while( cur, node ) {
			if( cur[tag].eq('Popup') ) continue;
			this.getControl(cur).draw(draw, timeline);
		}
	}

	/*   마우스 다운 구현   */
	mouseDown(pos) {
		cf[mouseDownTick]=System.tick();
		root=xmlNode.child(0);
		this.mouseDownControl(root, pos);
	}

	/*   마우스 업 구현   */
	mouseUp(pos) {
		root=xmlNode.child(0);
		this.mouseUpControl(root, pos);
		cf[mouseDownTick]=0;
	}

	/*   마우스 이동 구현   */
	mouseMove(pos) {
	}
 

	/*   팝업 클로즈시 호출   */
	closePopup(popupId) {
		root=this[mainNode];
		not( root ) {
			root=xmlNode.child(0);
		}
		popup=null;
		if( popupId ) {
			while( cur, root ) {
				not( cur[tag].eq('Popup') ) continue;
				if( cur[id].eq(popupId) ) {
					popup=this.getControl(cur);
					break;
				}
			}
		}
		not( popup ) {
			popup=cf[popupControl];
		}
		/* 탐업창 close 처리 (로딩창 닫기 등) */
		cashOpen=false;
		if( popup ) {
			popup.inject(tag);
			if( tag[id].eq('MessageWindow') ) {
				order=cf[OrderHeader];
					if( order[InputCashOk] ) {
					if( order[DelayCount]>2 ) {
						cashOpen=true;
					}
				}
			}
			popup.closePopup();
		}
		
		/* 웹뷰를 닫는다 */
		webView=this.webviewWidget;
		if( webView ) {
			webView.hide();
		}
		
		/* 열려있는 동영상 플레이 닫는다 */
		while( player, _arr(this,'MoviewPlayers') ) {
			player.hide();
		}
			
		cf[popupControl]=null;
		if( cashOpen ) {
			this.openPopup('SelectCashReceipt');
		}
		this.update();
	}

	/*   스택페이지 클로즈시 호출   */
	closeStackPage() {
		not( cf[stackPage] ) return;
		this.closePopup();
		cf[stackPage].closePage();
		cf[stackPage]=null;
		this.update();
	}

	/*   스택페이지 로딩   */
	openStackPage(pageId) {
		root=this[stack$pageId];	
		page=null;
		if( root ) {
			page=root.child(0);
		} else {
			node=xmlNode.child(0);
			root=node.addNode({tag:stack, id=$pageId});
			this[stack$pageId]=root;
			file=Class.file();
			fileName="$cf[pageXmlPath]/.xml";
			if( file.isFile(fileName) ) {
				this.loadXml(fileName, root.removeAll() );
			}
			not( root.childCount() ) {
				_log("loadStackPage error={ $pageId loading fail}");
				return null;
			}
			page=root.child(0);
			page[type]='vbox';
			setNodeSize(page, true);
			treePage=get('Kiosk.EditPageTree');
			if( treePage ) {
				treePage.tree.update();
			}
		}
		tag=page.child(0);
		ctrl= this.getControl(tag);
		ctrl.conf();
		cf[stackPage]=ctrl;
		this.update();
		return ctrl;
	}

	openPopup(popupId, fadeIn, width, height) {
		this.closePopup(); 
		popup=null, main=this[mainNode];
		while( cur,  main) {
			not( cur[tag].eq('Popup') ) continue;
			if( cur[id].eq(popupId) ) {
				if( width ) {
					cur[Width]=width;
				}
				if( height ) {
					cur[Height]=height;
				}
				popup=this.getControl(cur);
				break;
			}
		}
		print( cur, popupid);
		not( popup ) {
			page.alert("$popupId 팝업 정보가 존재하지 않습니다");
			return;
		}
		cf[popupStartTick]=System.tick();
		cf[popupControl]=popup;
		if( fadeIn ) {
			this.timelineStart('FadeInPopup', 800, 15, 'in', 'start');
		}
		popup.conf(main[rect]);
		this.update();
		return popup;
	}

	alert(msg, title, fadeIn) {
		not( title ) title="알림";
		this.closePopup();
		popup=null;
		main=this[mainNode];
		while( cur, main ) {
			not( cur[tag].eq('Popup') ) continue;
			if( cur[id].eq('MessageWindow') ) {
				popup=this.getControl(cur);
				titleNode=findTag('Title', cur);
				messageNode=findTag('Message', cur);
		
				titleNode[title]=title;
				messageNode[message]=msg;
				break;
			}
		}
		not( popup ) return;
		cf[popupStartTick]=System.tick();
		cf[popupControl]=popup;
		popup.conf(main[rect]);
		if( fadeIn ) {
			this.timelineStart('FadeInPopup', 800, 15, 'in', 'start');
		}
	}

	/*   타입라인(애니메이션) 시작   */
	timelineStart(tid, duration, range, mode, state) {
		canvasTimelineStart(canvas, timelineNode, tid, duration, range, mode);
	}

	/*   전체 타입라인(애니메이션) 종료   */
	timelineStop() {
		canvasTimelineStop(timelineNode);
	}

	/*   사용자 이벤트 호출   */
	addCanvasEvent(type, node) {
		canvas.postEvent(type, node);
	}
 
}