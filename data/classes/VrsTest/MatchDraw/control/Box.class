Box {
Box(tag, parentCtrl) {
	parentCtrl.inject(db, cf, xmlNode);
	this.addClass('common/control.PageBase');
	this.initControl();
}

conf() {
	if( this[styleButtons] ) {
		while( cur, tag ) {
			cur[rcImage]=null;
			if( cur[rcText] ) cur[rcText]=null;
		}
	}
	confNodeLayout(tag);
}

draw(draw, timeline) {
	drawNodeStyle(draw, tag);
	if( this[styleButtons] ) {
		while( cur, tag ) {
			drawNodeButton(draw, cur, tag, this);
		}
	} else if( tag[type].eq('stack') ) {
		page=this.currentPage;
		if( page ) {
			this.getControl(page).draw(draw, page);
		}
	} else if( tag[class].eq('control') ) {
		this.drawControl(draw, tag);
	}
}

initControl() {
	if( tag[style].eq('buttons') ) this[styleButtons]=true;
	
	if( this[styleButtons] ) {
		not( tag[type] ) tag[type]='hbox';
	} else {
		not( tag[type] ) tag[type]='vbox';
	}
	setNodeSize(tag, true);	
}

mouseDown(pos) {
	this.mouseDownRect=null;
	if( this[styleButtons] ) {
		while( cur, tag ) {
			not( cur[rcButton].contains(pos) ) continue;
			this.mouseDownRect=cur[rcButton];
		}
	} else if( tag[type].eq('stack') ) {
		page=this.currentPage;
		if( page ) {
			this.getControl(page).mouseDown(pos);
		}		
	} else if( tag[class].eq('control') ) {
		this.mouseDownControl(tag,pos);
	}
	if( this.mouseDownRect ) {
		this.update();
	}
}

mouseUp(pos) {
	if( this[styleButtons] ) {
		while( cur, tag ) {
			not( cur[rcButton].contains(pos) ) continue;
			if( cur[rcButton].eq(this.mouseDownRect) ) {
				_canvasEvent(cur, KIOSK.ButtonClick );
			}
		}
	} else if( tag[type].eq('stack') ) {
		page=this.currentPage;
		if( page ) {
			this.getControl(page).mouseUp(pos);
		}		
	} else if( tag[class].eq('control') ) {
		this.mouseUpControl(tag,pos);
	}
	if( this.mouseDownRect ) {
		this.mouseDownRect=null;
		this.update();
	}
}

setCurrentPage(page) {
	this.currentPage=page;
}
}